db.ComplianceItem.remove({"itemName" : "杀毒软件"})
db.ComplianceItem.save({
  "_id" : ObjectId("5eec260c91135503d8584d74"),
  "itemName" : "杀毒软件",
  "_version_" : "0",
  "createTime" :new Date(),
  "lastModifiedTime" :new Date(),
  "_class" : "com.ruijie.aggregation.terminal.complianceAction.domain.ComplianceItem"
})

db.complianceAction.remove({"itemId" : "5eec260c91135503d8584d74"})
db.complianceAction.save({
  "_id" : ObjectId("5f1321b49113551f18c277f0"),
  "itemId" : "5eec260c91135503d8584d74",
  "category" : 99,
  "name" : "安装指定杀毒软件,默认推送[360杀毒]:开启",
  "templateName" : "Custom",
  "isTip" : true,
  "tipMessage" : "该系统未安装指定杀毒软件列表(360杀毒、金山毒霸、瑞星杀毒、腾讯管家、卡巴斯基、火绒安全、node32)任意一款，系统默认推送360杀毒",
  "script" : "Function White-Software{\r\n\tparam([String] $hostUrl,\r\n\t\t[String] $softwareName,\r\n\t\t[String] $softwareVersion64,\r\n\t\t[String] $fileName64,\r\n\t\t[String] $softwareVersion32,\r\n\t\t[String] $fileName32,\r\n\t\t[bool] $silent=$true\r\n\t);\r\n\tIf([String]::isNullOrEmpty($softwareName)){Return \"BusinessException:softwareName can not empty\"}\r\n\tIf([String]::isNullOrEmpty($hostUrl)){Return \"BusinessException:hostUrl can not empty\"}\r\n\tIf([String]::isNullOrEmpty($fileName64) -and [String]::isNullOrEmpty($fileName32)){Return \"BusinessException:install package can not empty\"}\r\n\r\n\t$downloadPath = Join-Path $env:SystemDrive '/Program Files/Ruijie Networks/softwarePackage/';\r\n\tIf(!(Test-Path $downloadPath)){mkdir $downloadPath -Force|Out-Null}\r\n\tIf([IntPtr]::Size -eq 4){\r\n\t\tIf([String]::isNullOrEmpty($fileName32)){Return Ret-Success \"no installation package32 available, default and pass\"}\r\n\t\t$softwareVersion=$softwareVersion32;\r\n\t\t$bit='bit32';\r\n\t\t$fileName=$fileName32\r\n\t}Else{\r\n\t\tIf([String]::isNullOrEmpty($fileName64)){Return Ret-Success \"no installation package64 available, default and pass\"}\r\n\t\t$softwareVersion=$softwareVersion64;\r\n\t\t$bit='bit64';\r\n\t\t$fileName=$fileName64;\r\n\t}\r\n\t\r\n\tIf((Get-SoftwareInfoByNameVersion $softwareName $softwareVersion) -ne $null){Return Ret-Success \"${softwareName} has been installed\"}\r\n\t$softwarePath = Join-Path $downloadPath $fileName;\r\n\tIf(!(Test-Path \"$softwarePath\") -or (cat \"$softwarePath\" -TotalCount 1) -eq $null){\r\n\t\t$tmp=Handle-SpecialCharactersOfHTTP \"?fileName=$fileName&dir=win/$bit\";\r\n\t\t$remoteSoftwarePath=$hostUrl+'/temp'+$tmp;\r\n\t\t$Res=Download-File \"$remoteSoftwarePath\" \"$softwarePath\";\"$Res\";\r\n\t\tIf(!(Is-Success $Res)){Return}\r\n\t}\r\n\t\r\n\t$file=ls $softwarePath;\r\n\t$Suffix=$file.Extension.substring(1);\r\n\tIf($null -ne (ps|?{$_.name -eq $file.baseName -And ($_.path -eq $null -Or $_.path -eq $softwarePath)})){Return \"$($file.name) is Installing\"}\r\n\t\r\n\tIf('msi' -eq $Suffix){\r\n\t\t$os=gwmi -Class Win32_OperatingSystem | Select -ExpandProperty Caption\r\n\t\tIf($os -Like '*Windows 7*' -Or $os -Like '*Windows 8*'){\r\n\t\t\tiex \"& cmd /c `'msiexec.exe /i `\"$softwarePath`\"`' /qn ADVANCED_OPTIONS=1 CHANNEL=100\"\r\n\t\t}Else{\r\n\t\t\tiex \"Msiexec /i `\"$softwarePath`\" /norestart /qn\" -ErrorAction SilentlyContinue;\r\n\t\t\tIf(!$?){Return Print-Exception \"Msiexec /i `\"$softwarePath`\" /norestart /qn\"}\r\n\t\t}\r\n\t}else{\r\n\t\t$Res=OperatorSoftwareBySWI $hostUrl $softwarePath $silent;\"$Res\";\r\n\t\tIf(!(Is-Success $Res)){Return}\r\n\t}\r\n\tIf((Get-SoftwareInfoByNameVersion $softwareName $softwareVersion) -eq $null){Return \"BusinessException:Installation of the software has not been successful\"}\r\n\tReturn Ret-Success \r\n};Function Ret-Success([String] $business){\r\n\tReturn \"$business%%SMP:success\"\r\n};Function Is-Success($Ret){\r\n\tIf($Ret -ne $null -And ($Ret|Select -Last 1).EndsWith('%%SMP:success')){Return $True}\r\n\tReturn $False\r\n};Function Print-Exception([String]$command){\r\n\tReturn \"execute Command [$command] Exception,The Exception is $($error[0])\"\r\n};Function Download-File([String]$src,[String]$des,[bool]$isReplace=$false){\r\n\tIf([String]::IsNullOrEmpty($src)){Return \"BusinessException:Source file does not exist\"}\r\n\tIf([String]::IsNullOrEmpty($des)){Return \"BusinessException:Destination address cannot be empty\"}\r\n\tIf(Test-Path $des){\r\n\t\twhile (Test-FileLocked $des){\r\n\t\t\tsleep 1;\r\n\t\t\tIf($i++ -gt 1){Return \"File [$des] is in use\"}\r\n\t\t}\r\n\t\t$file=ls $des;\r\n\t\tIf(Test-Path ($file.DirectoryName+\"/\"+$file.basename+\"_end\")){Return Ret-Success \"Download-File:No Need Operator\"}\r\n\t}\r\n\tTry{\r\n\t\t$web=New-Object System.Net.WebClient;\r\n\t\t$web.Encoding=[System.Text.Encoding]::UTF8;\r\n\t\t$web.DownloadFile(\"$src\", \"$des\");\r\n\t\t$file=(ls $des);\r\n\t\t$endFile=$file.basename+\"_end\";\r\n\t\tNew-Item -Path $file.DirectoryName -Name $endFile -ItemType \"file\" |Out-Null\r\n\t\tIf(!(Test-Path $des) -or (Get-Content \"$des\" -totalcount 1) -eq $null){Return \"BusinessException:The downloaded file does not exist or the content is empty\"}\r\n\t}Catch{Return Print-Exception \"$web.DownloadFile($src,$des)\"}\r\n\tReturn Ret-Success \"Download-File\"\r\n};Function Test-FileLocked([string]$FilePath) {\r\n    try {[IO.File]::OpenWrite($FilePath).close();$false}catch{$true}\r\n};Function Get-SoftwareInfoByNameList([Object[]] $arr){\r\n\t$arrList=[System.Collections.ArrayList]$arr;\r\n\t$retArr=@();\r\n\t$Key='Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall','SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall';\r\n\tIf([IntPtr]::Size -eq 8){$Key+='SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall'}\r\n\tForeach($_ In $Key){\r\n\t  $Hive='LocalMachine';\r\n\t  If('Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall' -ceq $_){$Hive='CurrentUser'}\r\n\t  $RegHive=[Microsoft.Win32.RegistryKey]::OpenRemoteBaseKey($Hive,$env:COMPUTERNAME);\r\n\t  $RegKey=$RegHive.OpenSubKey($_);\r\n\t  If([string]::IsNullOrEmpty($RegKey)){Continue}\r\n\t  $arrs=$RegKey.GetSubKeyNames();\r\n\t  Foreach($_ In $arrs){\r\n\t\t$SubKey=$RegKey.OpenSubKey($_);\r\n\t\t$tmp=$subkey.GetValue('DisplayName');\r\n\t\tIf(![string]::IsNullOrEmpty($tmp)){\r\n\t\t\t$tmp=$tmp.Trim();\r\n\t\t\tIf($tmp.gettype().name -eq 'string' -And $arrList.Contains($tmp)){\r\n\t\t\t\t$DisplayVersion=$subkey.GetValue('DisplayVersion');\r\n\t\t\t\t$retVal=''|Select 'DisplayName','DisplayVersion','UninstallString','InstallLocation','RegPath','InstallDate','InstallSource';\r\n\t\t\t\t$retVal.DisplayName=$subkey.GetValue('DisplayName');\r\n\t\t\t\t$retVal.DisplayVersion=$DisplayVersion;\r\n\t\t\t\t$retVal.UninstallString=$subkey.GetValue('UninstallString');\r\n\t\t\t\t$retVal.InstallLocation=$subkey.GetValue('InstallLocation');\r\n\t\t\t\t$retVal.RegPath=$subkey.GetValue('RegPath');\r\n\t\t\t\t$retVal.InstallDate=$subkey.GetValue('InstallDate');\r\n\t\t\t\t$retVal.InstallSource=$subkey.GetValue('InstallSource');\r\n\t\t\t\t$retArr+=$retVal;\r\n\t\t\t}\r\n\t\t}\r\n\t\t$SubKey.Close()\r\n\t  };\r\n\t  $RegHive.Close()\r\n\t};\r\n\tReturn $retArr|sort DisplayName -Unique;\r\n};Function OperatorSoftwareBySWI([String]$hostUrl,[String]$softwarePath,$isSilent=$True){\r\n\t$business=\"[OperatorSoftwareBySWI:$softwarePath]=>>\"\r\n\tIf([String]::IsNullOrEmpty(\"$softwarePath\")){\r\n\t\tReturn \"uninstall script not exist\"\r\n\t}\r\n\tIf(!$softwarePath.EndsWith(\".exe\") -And !$softwarePath.EndsWith(\".exe`\"\")){\r\n\t\tReturn \"uninstall script format error[$softwarePath]\"\r\n\t}\r\n\tIf($softwarePath.StartsWith('\"')){\r\n\t\t$softwarePath=$softwarePath.substring(1,$softwarePath.LastIndexOf('\"'))\r\n\t}\r\n\t$SWIDir=Join-Path $env:SystemRoot 'System32';\r\n\tIf(!(Test-Path $SWIDir)){\r\n\t\tmkdir $SWIDir -Force|Out-Null;\r\n\t\tIf(!$?){Return Print-Exception \"${business}mkdir $SWIDir -Force|Out-Null\"}\r\n\t}\r\n\t\r\n\tIf([IntPtr]::Size -eq 8){$SWIFileName='SWIService64.exe'}Else{$SWIFileName='SWIService.exe';}\r\n\t$SWIPath=Join-Path $SWIDir $SWIFileName;\r\n\t$SWIServiceName='SWIserv';\r\n\tIf (!(Test-Path \"$SWIPath\")){\r\n\t\tIf([String]::IsNullOrEmpty(\"$hostUrl\")){Return \"When downloading the installation package, the host address cannot be empty\"}\r\n\t\t$remoteexePath=\"$hostUrl/$SWIFileName\";\r\n\t\t$Res=Download-File \"$remoteexePath\" \"$SWIPath\";\"$business$Res\";\r\n\t\tIf(!(Is-Success $Res)){Return}\r\n\t}\r\n\t$SWI=gsv $SWIServiceName -ErrorAction SilentlyContinue\r\n\tIf($null -eq $SWI){\r\n\t\tTry{\r\n\t\t\tcd $SWIDir;\r\n\t\t\tiex \".\\$SWIFileName  -install -ErrorAction Stop\"\r\n\t\t}Catch{\r\n\t\t\tReturn Print-Exception \"${business}.\\SWIService.exe -install -ErrorAction Stop\"\r\n\t\t}\r\n\t}else{\r\n\t\tIf($SWI.Status -eq 'Running'){\r\n\t\t\tspsv -Name $SWIServiceName -ErrorAction SilentlyContinue;\r\n\t\t\tIf(!$?){Return Print-Exception \"${business}spsv -Name $SWIServiceName\"}\r\n\t\t}\r\n\t}\r\n\tTry{\r\n\t\t$p='/s'\r\n\t\tIf(!$isSilent){$p=''}\r\n\t\t(gsv -Name $SWIServiceName).Start(\"{`\"exe`\":`\"$softwarePath`\",`\"arg`\":`\"$p`\"}\")\r\n\t}Catch{\r\n\t\tReturn Print-Exception \"${business}(gsv -Name $SWIServiceName).Start(\"+'\"{`\"exe`\":'+\"$softwarePath\"+',`\"arg`\":`\"/s`\"}\")'\r\n\t}\r\n\tReturn Ret-Success $business\r\n};Function Handle-SpecialCharactersOfHTTP([String] $Characters){\r\n\tIf([String]::IsNullOrEmpty($Characters)){\r\n\t\tReturn $Null;\r\n\t}\r\n\t#[空格:%20 \":%22 #:%23 %:%25 &用%26 +:%2B ,:%2C /:%2F ::%3A ;:%3B <:%3C =:%3D >:%3E ?:%3F @:%40 \\:%5C |:%7C]\r\n\tReturn $Characters.replace(' ','%20').replace('+','%2B').replace('/','%2F').replace('(','%28').replace(')','%29')\r\n}\r\n\r\nFunction Unified-Return([Object[]]$msgs,[Parameter(Mandatory = $true)][String]$business){\r\n\tIf($msgs -eq $Null -Or $msgs.count -eq 0){\r\n\t\t$isSuccess='false';\r\n\t\t$msg='No message returned';\r\n\t}Else{\r\n\t\tIf(($msgs[-1]).EndsWith('%%SMP:success')){\r\n\t\t\t$isSuccess='true';\r\n\t\t}Else{\r\n\t\t\t$isSuccess='false';\r\n\t\t}\r\n\t\t$msg=($msgs -Join ';\t').replace('\\','/')\r\n\t}\r\n\tReturn \"{`\"isSuccess`\":`\"$isSuccess`\",`\"msg`\":`\"$msg`\",`\"business`\":`\"$business`\"}\";\r\n}\r\n\r\nFunction UnicodeToChinese([String]$sourceStr){\r\n\t[regex]::Replace($sourceStr,'\\\\u[0-9-a-f]{4}',{param($v);[char][int]($v.Value.replace('\\u','0x'))})\r\n}\r\n\r\nFunction Install-SDSotware([String] $hostUrl,$softwareName,$softwareVersion,$fileName32,$fileName64,[Object[]]$arr){\r\n\tIf(($retArr=Get-SoftwareInfoByNameList $arr) -and $retArr.count -gt 0){\r\n\t\tForeach($ret in $retArr){$temp+=\"{name=\"+$ret.DisplayName+\" , version=\"+$ret.DisplayVersion+\"} , \"}\r\n\t\t$temp=$temp.substring(0,$temp.length-2)\r\n\t\tUnified-Return \"The system has installed anti-virus software, the list is [ $temp ]%%SMP:success\" 'Install-SDSotware'\r\n\t}Else{\r\n\t\tUnified-Return (White-Software -hostUrl $hostUrl -softwareName $softwareName -softwareVersion32 $softwareVersion -fileName32 $fileName32 -softwareVersion64 $softwareVersion -fileName64 $fileName64 -silent $false) 'Install-SDSotware'\r\n\t}\r\n}\r\n\r\n$sourceStr='Install-SDSotware `\r\n-hostUrl \"http://10.255.0.68:9888/nodeManager/file/download/\" `\r\n-softwareName \"\\u0033\\u0036\\u0030\\u6740\\u6bd2\" `\r\n-softwareVersion \"5.0.0.8170\" `\r\n-fileName32 \"360sd_std_5.0.0.8170E.exe\" `\r\n-fileName64 \"360sd_x64_std_5.0.0.8170D.exe\" `\r\n-arr @(\"\\u91d1\\u5c71\\u6bd2\\u9738\",\"\\u0033\\u0036\\u0030\\u5b89\\u5168\\u536b\\u58eb\",\"ESET Security\",\"\\u706b\\u7ed2\\u5b89\\u5168\\u8f6f\\u4ef6\",\"\\u0033\\u0036\\u0030\\u6740\\u6bd2\",`\r\n\"\\u745e\\u661f\\u6740\\u6bd2\\u8f6f\\u4ef6\",\"\\u0032\\u0033\\u0034\\u0035\\u5b89\\u5168\\u536b\\u58eb\",\"\\u7535\\u8111\\u7ba1\\u5bb6\",\"Kaspersky Endpoint Security 10 for Windows\")'\r\niex (UnicodeToChinese $sourceStr)\r\n<#\r\n\t\t软件名称（unicode） \t \t\t\t\t软件名称（中文）\t\t\t\t\t\t\t别名\r\n1.\t\\u91d1\\u5c71\\u6bd2\\u9738\t\t\t\t\t金山毒霸\t\t\t\t\t\t\t\t\t金山毒霸\r\n2.\t\\u0033\\u0036\\u0030\\u5b89\\u5168\\u536b\\u58eb\t360安全卫士\t\t\t\t\t\t\t\t\t360安全卫士\r\n3.\t\\u0033\\u0036\\u0030\\u6740\\u6bd2\t\t\t\t360杀毒\t\t\t\t\t\t\t\t\t\t360杀毒\r\n4.\t\\u706b\\u7ed2\\u5b89\\u5168\\u8f6f\\u4ef6\t\t火绒安全软件\t\t\t\t\t\t\t\t火绒安全软件\r\n5.\t\\u745e\\u661f\\u6740\\u6bd2\\u8f6f\\u4ef6\t\t瑞星杀毒软件\t\t\t\t\t\t\t\t瑞星杀毒软件\r\n6.\t\\u0032\\u0033\\u0034\\u0035\\u5b89\\u5168\\u536b\\u58eb\t安全卫士 - 2345\t\t\t\t\t\t2345安全卫士\r\n7.\t\\u7535\\u8111\\u7ba1\\u5bb6\t\t\t\t\t电脑管家\t\t\t\t\t\t\t\t\t腾讯电脑管家\r\n8.\t纯英文无需转unicode\t\t\t\t\t\t\tESET Security\t\t\t\t\t\t\t\tnode32\r\n9.\t纯英文无需转unicode\t\t\t\t\t\t\tKaspersky Endpoint Security 10 for Windows\t卡巴斯基\r\n10.\t\\u660e\\u5fa1\\u4e3b\\u673a\\u5b89\\u5168\\u53ca\\u7ba1\\u7406\\u7cfb\\u7edf\t明御主机安全及管理系统\t安恒\r\n\r\n脚本使用解读\r\n注意:\t1. 360杀毒软件安装包 需要提前上传至部署的smp+服务器的指定位置 2.修改参数(hostUrl)为部署的smp+服务器 3.若软件名称包含中文,一定要先转成unicode编码\r\n示例:仅展示可修改部分\r\n参数: -hostUrl \"http://10.255.0.68:9888/nodeManager/file/download/\"\r\n参数: -arr @(\"名称1\",\"名称2\",\"名称3\",...,\"名称n\")\r\n#>",
  "_version_" : "0",
  "createTime" :new Date(),
  "lastModifiedTime" :new Date(),
  "_class" : "com.ruijie.authentication.authnode.domain.compliance.ComplianceAction"
})